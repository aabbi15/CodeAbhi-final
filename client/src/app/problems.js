const PROBLEMS = [
    {
      no: 1,
      name: "Two Sum",
      acceptance: "67%",
      difficulty: "Medium",
      description: "Given an array of integers nums and a target value, return indices of the two numbers such that they add up to the target.",
      example: "Input: nums = [2, 7, 11, 15], target = 9\nOutput: [0, 1]\nExplanation: The sum of 2 and 7 equals 9, so the indices are 0 and 1.",
    },
    {
      no: 2,
      name: "Reverse String",
      acceptance: "82%",
      difficulty: "Easy",
      description: "Write a function that reverses a string. Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.",
      example: "Input: ['h', 'e', 'l', 'l', 'o']\nOutput: ['o', 'l', 'l', 'e', 'h']",
    },
    {
      no: 3,
      name: "Longest Substring Without Repeating Characters",
      acceptance: "75%",
      difficulty: "Hard",
      description: "Given a string s, find the length of the longest substring without repeating characters.",
      example: "Input: s = 'abcabcbb'\nOutput: 3\nExplanation: The longest substring without repeating characters is 'abc', which has a length of 3.",
    },
    {
      no: 4,
      name: "Palindrome Number",
      acceptance: "88%",
      difficulty: "Easy",
      description: "Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.",
      example: "Input: x = 121\nOutput: true",
    },
    {
      no: 5,
      name: "Container With Most Water",
      acceptance: "72%",
      difficulty: "Medium",
      description: "Given n non-negative integers a1, a2, ..., an, where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of the line i are at (i, ai) and (i, 0). Find two lines, which, together with the x-axis, forms a container, such that the container contains the most water.",
      example: "Input: height = [1,8,6,2,5,4,8,3,7]\nOutput: 49",
    },
    {
      no: 6,
      name: "Merge Two Sorted Lists",
      acceptance: "83%",
      difficulty: "Easy",
      description: "Merge two sorted linked lists and return it as a sorted list. The list should be made by splicing together the nodes of the first two lists.",
      example: "Input: l1 = [1,2,4], l2 = [1,3,4]\nOutput: [1,1,2,3,4,4]",
    },
    {
      no: 7,
      name: "Reverse Integer",
      acceptance: "64%",
      difficulty: "Easy",
      description: "Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.",
      example: "Input: x = 123\nOutput: 321",
    },
    {
      no: 8,
      name: "Valid Parentheses",
      acceptance: "76%",
      difficulty: "Easy",
      description: "Given a string s containing just the characters '(', ')', '{', '}', '[', and ']', determine if the input string is valid.",
      example: "Input: s = '([)]'\n Output: false",
    },
    {
      no: 9,
      name: "Binary Tree Inorder Traversal",
      acceptance: "85%",
      difficulty: "Medium",
      description: "Given the root of a binary tree, return the inorder traversal of its nodes' values.",
      example: "Input: root = [1,null,2,3]\nOutput: [1,3,2]",
    },
    {
      no: 10,
      name: "Add Two Numbers",
      acceptance: "73%",
      difficulty: "Medium",
      description: "You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.",
      example: "Input: l1 = [2,4,3], l2 = [5,6,4]\nOutput: [7,0,8]",
    },
    {
      no: 11,
      name: "Container With Most Water",
      acceptance: "72%",
      difficulty: "Medium",
      description: "Given n non-negative integers a1, a2, ..., an, where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of the line i are at (i, ai) and (i, 0). Find two lines, which, together with the x-axis, forms a container, such that the container contains the most water.",
      example: "Input: height = [1,8,6,2,5,4,8,3,7]\nOutput: 49",
    },
    {
      no: 12,
      name: "Search in Rotated Sorted Array",
      acceptance: "63%",
      difficulty: "Hard",
      description: "You are given an integer array nums sorted in ascending order, which is rotated at some pivot unknown to you beforehand. You are given a target value to search for. If found in the array, return its index; otherwise, return -1.",
      example: "Input: nums = [4,5,6,7,0,1,2], target = 0\nOutput: 4",
    },
    {
      no: 13,
      name: "Valid Sudoku",
      acceptance: "47%",
      difficulty: "Medium",
      description: "Determine if a 9 x 9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules:",
      example: "Input: board = \n[['5','3','.','.','7','.','.','.','.'],\n ['6','.','.','1','9','5','.','.','.'],\n ['.','9','8','.','.','.','.','6','.'],\n ['8','.','.','.','6','.','.','.','3'],\n ['4','.','.','8','.','3','.','.','1'],\n ['7','.','.','.','2','.','.','.','6'],\n ['.','6','.','.','.','.','2','8','.'],\n ['.','.','.','4','1','9','.','.','5'],\n ['.','.','.','.','8','.','.','7','9']]\nOutput: true",
    },
    {
      no: 14,
      name: "3Sum",
      acceptance: "32%",
      difficulty: "Medium",
      description: "Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0.",
      example: "Input: nums = [-1,0,1,2,-1,-4]\nOutput: [[-1,-1,2],[-1,0,1]]",
    },
    {
      no: 15,
      name: "Merge k Sorted Lists",
      acceptance: "52%",
      difficulty: "Hard",
      description: "You are given an array of k linked-lists lists, each linked-list is sorted in ascending order. Merge all the linked-lists into one sorted linked-list and return it.",
      example: "Input: lists = [[1,4,5],[1,3,4],[2,6]]\nOutput: [1,1,2,3,4,4,5,6]",
    },
    {
      no: 16,
      name: "Spiral Matrix",
      acceptance: "39%",
      difficulty: "Medium",
      description: "Given an m x n matrix, return all elements of the matrix in spiral order.",
      example: "Input: matrix = \n[[1,2,3],[4,5,6],[7,8,9]]\nOutput: [1,2,3,6,9,8,7,4,5]",
    },
    {
      no: 17,
      name: "Valid Palindrome",
      acceptance: "38%",
      difficulty: "Easy",
      description: "Given a string s, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.",
      example: "Input: s = 'A man, a plan, a canal: Panama'\nOutput: true",
    },
    {
      no: 18,
      name: "Letter Combinations of a Phone Number",
      acceptance: "52%",
      difficulty: "Medium",
      description: "Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent. Return the answer in any order.",
      example: "Input: digits = '23'\nOutput: ['ad','ae','af','bd','be','bf','cd','ce','cf']",
    },
    {
      no: 19,
      name: "Minimum Path Sum",
      acceptance: "61%",
      difficulty: "Medium",
      description: "Given a m x n grid filled with non-negative numbers, find a path from the top left to the bottom right, which minimizes the sum of all numbers along its path.",
      example: "Input: grid = \n[[1,3,1],[1,5,1],[4,2,1]]\nOutput: 7",
    },
    {
      no: 20,
      name: "Word Search",
      acceptance: "41%",
      difficulty: "Medium",
      description: "Given an m x n grid of characters board and a string word, return true if word exists in the grid. The word can be constructed from letters of sequentially adjacent cells, where adjacent cells are horizontally or vertically neighboring. The same letter cell may not be used more than once.",
      example: "Input: board = [['A','B','C','E'],['S','F','C','S'],['A','D','E','E']], word = 'ABCCED'\nOutput: true",
    },
    
      {
        no: 21,
        name: "Subsets",
        acceptance: "65%",
        difficulty: "Medium",
        description: "Given an integer array nums that may contain duplicates, return all possible subsets (the power set).",
        example: "Input: nums = [1,2,2]\nOutput: [[],[1],[1,2],[1,2,2],[2],[2,2]]",
      },
      {
        no: 22,
        name: "Combination Sum",
        acceptance: "61%",
        difficulty: "Medium",
        description: "Given a set of candidate numbers (candidates) and a target number (target), find all unique combinations in candidates where the candidate numbers sum to target.",
        example: "Input: candidates = [2,3,6,7], target = 7\nOutput: [[2,2,3],[7]]",
      },
      {
        no: 23,
        name: "First Missing Positive",
        acceptance: "35%",
        difficulty: "Hard",
        description: "Given an unsorted integer array nums, find the smallest missing positive integer.",
        example: "Input: nums = [3,4,-1,1]\nOutput: 2",
      },
      {
        no: 24,
        name: "Rotate Image",
        acceptance: "62%",
        difficulty: "Medium",
        description: "You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).",
        example: "Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]\nOutput: [[7,4,1],[8,5,2],[9,6,3]]",
      },
      {
        no: 25,
        name: "Jump Game II",
        acceptance: "34%",
        difficulty: "Hard",
        description: "Given an array of non-negative integers nums, you are initially positioned at the first index. Each element in the array represents your maximum jump length at that position. Your goal is to reach the last index in the minimum number of jumps.",
        example: "Input: nums = [2,3,1,1,4]\nOutput: 2",
      },
      {
        no: 26,
        name: "Palindrome Linked List",
        acceptance: "39%",
        difficulty: "Easy",
        description: "Given the head of a singly linked list, determine if it is a palindrome.",
        example: "Input: head = [1,2,2,1]\nOutput: true",
      },
      {
        no: 27,
        name: "Longest Palindromic Substring",
        acceptance: "30%",
        difficulty: "Medium",
        description: "Given a string s, return the longest palindromic substring in s.",
        example: "Input: s = 'babad'\nOutput: 'bab'",
      },
      {
        no: 28,
        name: "Word Ladder",
        acceptance: "40%",
        difficulty: "Medium",
        description: "Given two words beginWord and endWord, and a dictionary wordList, return the length of the shortest transformation sequence from beginWord to endWord, such that:",
        example: "Input: beginWord = 'hit', endWord = 'cog', wordList = ['hot','dot','dog','lot','log','cog']\nOutput: 5",
      },
      {
        no: 29,
        name: "Longest Common Prefix",
        acceptance: "39%",
        difficulty: "Easy",
        description: "Write a function to find the longest common prefix string amongst an array of strings. If there is no common prefix, return an empty string ''.",
        example: "Input: strs = ['flower','flow','flight']\nOutput: 'fl'",
      },
      {
        no: 30,
        name: "Valid Number",
        acceptance: "17%",
        difficulty: "Hard",
        description: "A valid number can be split up into these components (in order): a decimal value or an integer, an optional exponent, which is an 'e' or 'E' followed by an integer. A valid number can only have the following characters in it: '0-9', '.', 'e', 'E', and '+' or '-'.",
        example: "Input: s = '0.1'\nOutput: true",
      },
      {
        no: 31,
        name: "Remove Nth Node From End of List",
        acceptance: "38%",
        difficulty: "Medium",
        description: "Given the head of a linked list, remove the n-th node from the end of the list and return its head.",
        example: "Input: head = [1,2,3,4,5], n = 2\nOutput: [1,2,3,5]",
      },
      {
        no: 32,
        name: "Generate Parentheses",
        acceptance: "66%",
        difficulty: "Medium",
        description: "Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.",
        example: "Input: n = 3\nOutput: ['((()))','(()())','(())()','()(())','()()()']",
      },
      {
        no: 33,
        name: "Implement strStr()",
        acceptance: "37%",
        difficulty: "Easy",
        description: "Implement strStr(). Return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.",
        example: "Input: haystack = 'hello', needle = 'll'\nOutput: 2",
      },
      {
        no: 34,
        name: "Pow(x, n)",
        acceptance: "31%",
        difficulty: "Medium",
        description: "Implement pow(x, n), which calculates x raised to the power n (i.e., x^n).",
        example: "Input: x = 2.00000, n = 10\nOutput: 1024.00000",
      },
      {
        no: 35,
        name: "Count and Say",
        acceptance: "45%",
        difficulty: "Easy",
        description: "The count-and-say sequence is a sequence of digit strings defined by the recursive formula: countAndSay(1) = '1', countAndSay(n)",
        example : "Coming Soon"
      },
  ];
  
  
  module.exports = PROBLEMS;
  